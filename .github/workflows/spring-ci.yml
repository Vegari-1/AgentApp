name: SpringBoot-CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

env:
  PROJ_DIR: ./agent-app
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/agent-app

jobs:
  ci-pipe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v4
          
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: Build and Test with Maven
        run: mvn -B test --file ./agent-app/pom.xml
      
      - name: Create a Release
        id: version
        if: github.event_name == 'push'
        run: |
          npm install semantic-release
          npm install semantic-release-export-data
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to GPR
        if: github.event_name == 'push'
        run: mvn --file ./agent-app/pom.xml --batch-mode deploy -DskipTests -Drevision=${{ steps.version.outputs.new-release-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image and push to Docker Hub
        if: github.event_name == 'push'
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.PROJ_DIR }}
          tags: ${{ format('{0}:{1}', env.DOCKERHUB_REPO, steps.version.outputs.new-release-version) }}
          push: true
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache,mode=max

      
      
